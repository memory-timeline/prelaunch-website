{"version":3,"sources":["pages/MemoryThumbnailCard.jsx","pages/MemoryThumbnail.jsx","../node_modules/@mui/icons-material/AddOutlined.js","../node_modules/@mui/material/CardActionArea/cardActionAreaClasses.js","../node_modules/@mui/material/CardActionArea/CardActionArea.js","pages/memories/CreateMemoryItem.jsx","pages/memories/LoadMore.jsx","pages/memories/GridView.jsx","pages/memories/Memories.jsx"],"names":["MemoryThumbnailCard","handleClick","children","onClick","elevation","sx","bgcolor","borderRadius","border","color","position","height","lg","sm","xs","borderColor","ThumbnailImage","imageSrc","imageSrcSet","title","handleImageLoad","component","src","srcSet","alt","textAlign","objectFit","onLoad","ThumbnailDetails","date","disableTypography","noWrap","overflow","textOverflow","width","fontWeight","subheader","padding","MemoryThumbnail","thumbnailImage","thumbnailImageSrcSet","imgSrcSet","defaultProps","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","getCardActionAreaUtilityClass","slot","generateUtilityClass","cardActionAreaClasses","generateUtilityClasses","_excluded","CardActionAreaRoot","styled","ButtonBase","name","overridesResolver","props","styles","root","theme","display","focusHighlight","opacity","palette","action","hoverOpacity","focusVisible","focusOpacity","CardActionAreaFocusHighlight","pointerEvents","top","right","bottom","left","backgroundColor","transition","transitions","create","duration","short","CardActionArea","React","inProps","ref","useThemeProps","className","focusVisibleClassName","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","_jsxs","_extends","clsx","_jsx","CreateMemoryItem","navigate","useNavigate","belowmd","useMediaQuery","breakpoints","down","Grid","item","md","p","Typography","variant","fontSize","transform","LoadMore","handleMoreClick","GridView","memories","nextToken","sortedMemories","sort","a","b","memory_id","container","py","justifyContent","alignItems","map","memory","photo","images","join","memDetails","state","getMemories","bucket","authURL","handleMemoryCallback","handleTokenCallback","handleThumbnailCallback","api","resp","Promise","all","getThumbnails","thumbnails","next_continuation_token","console","log","Memories","useState","setNextToken","memoryIDs","setMemoryIDs","setMemories","count","setCount","grid","setGrid","picLoaded","cnt","handleTokenChange","newToken","addMemories","details","arr","concat","addMemoryIDs","ids","useEffect","thumbnailGrid","GetThumbnailGrid","length","Skeleton","type","imageLoading","Box"],"mappings":"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","file":"static/js/10.bb5aa728.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport Card from '@mui/material/Card';\nimport CardActionArea from '@mui/material/CardActionArea';\n//  import { useTheme, alpha } from '@mui/material/styles';\n\nexport default function MemoryThumbnailCard({ handleClick, children }) {\n  //  const theme = useTheme();\n\n  return (\n    <CardActionArea onClick={handleClick}>\n      <Card\n        elevation={0}\n        sx={{\n          bgcolor: '#fff',\n          borderRadius: 5,\n          border: '2px solid gray',\n          color: 'black',\n          position: 'relative',\n          height: {\n            lg: 350,\n            sm: 300,\n            xs: 250,\n          },\n          '&:hover': {\n            border: 3,\n            borderColor: 'secondary.main',\n            elevation: 0,\n          },\n        }}\n      >\n        {children}\n      </Card>\n    </CardActionArea>\n  );\n}\n\nMemoryThumbnailCard.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport Typography from '@mui/material/Typography';\nimport MemoryThumbnailCard from './MemoryThumbnailCard';\n\nfunction ThumbnailImage({\n  imageSrc, imageSrcSet, title, handleImageLoad,\n}) {\n  return (\n    <CardMedia\n      component=\"img\"\n      src={imageSrc}\n      srcSet={imageSrcSet}\n      alt={title}\n      sx={{\n        borderColor: 'muted.main',\n        borderRadius: 4,\n        textAlign: 'center',\n        objectFit: 'cover',\n        height: {\n          lg: 270,\n          sm: 220,\n          xs: 170,\n        },\n      }}\n      onLoad={handleImageLoad}\n    />\n  );\n}\n\nfunction ThumbnailDetails({ title, date }) {\n  return (\n    <CardContent>\n      <CardHeader\n        disableTypography\n        title={(\n          <Typography\n            noWrap\n            sx={{\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              width: { xs: 'calc(75%)', sm: 'calc(100%)' },\n              fontWeight: 600,\n            }}\n          >\n            {title}\n          </Typography>\n        )}\n        subheader={<Typography sx={{ color: 'muted.main' }}>{date}</Typography>}\n        sx={{\n          padding: 0,\n          color: 'faded.black',\n        }}\n      />\n    </CardContent>\n  );\n}\n\nexport default function MemoryThumbnail({\n  title,\n  date,\n  thumbnailImage,\n  thumbnailImageSrcSet,\n  handleClick,\n  handleImageLoad,\n}) {\n  return (\n    <MemoryThumbnailCard handleClick={handleClick}>\n      <ThumbnailImage\n        imageSrc={thumbnailImage}\n        imgSrcSet={thumbnailImageSrcSet}\n        title={title}\n        handleImageLoad={handleImageLoad}\n      />\n      <ThumbnailDetails title={title} date={date} />\n    </MemoryThumbnailCard>\n  );\n}\n\nThumbnailDetails.defaultProps = {\n  title: 'Memory Thumbnail Image',\n  date: 'Memory Date',\n};\n\nThumbnailDetails.propTypes = {\n  title: PropTypes.string,\n  date: PropTypes.string,\n};\n\nThumbnailImage.defaultProps = {\n  title: 'Memory Thumbnail Image',\n  imageSrc: '',\n  imageSrcSet: '',\n  handleImageLoad: () => {},\n};\n\nThumbnailImage.propTypes = {\n  title: PropTypes.string,\n  imageSrc: PropTypes.string,\n  imageSrcSet: PropTypes.string,\n  handleImageLoad: PropTypes.func,\n};\n\nMemoryThumbnail.defaultProps = {\n  thumbnailImageSrcSet: '',\n  handleImageLoad: () => {},\n};\n\nMemoryThumbnail.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.element, PropTypes.string]).isRequired,\n  date: PropTypes.oneOfType([PropTypes.element, PropTypes.string]).isRequired,\n  thumbnailImage: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  thumbnailImageSrcSet: PropTypes.string,\n  handleImageLoad: PropTypes.func,\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'AddOutlined');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardActionAreaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActionArea', slot);\n}\nconst cardActionAreaClasses = generateUtilityClasses('MuiCardActionArea', ['root', 'focusVisible', 'focusHighlight']);\nexport default cardActionAreaClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"focusVisibleClassName\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardActionAreaClasses, { getCardActionAreaUtilityClass } from './cardActionAreaClasses';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    focusHighlight: ['focusHighlight']\n  };\n  return composeClasses(slots, getCardActionAreaUtilityClass, classes);\n};\n\nconst CardActionAreaRoot = styled(ButtonBase, {\n  name: 'MuiCardActionArea',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  display: 'block',\n  textAlign: 'inherit',\n  width: '100%',\n  [`&:hover .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: theme.palette.action.hoverOpacity,\n    '@media (hover: none)': {\n      opacity: 0\n    }\n  },\n  [`&.${cardActionAreaClasses.focusVisible} .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: theme.palette.action.focusOpacity\n  }\n}));\nconst CardActionAreaFocusHighlight = styled('span', {\n  name: 'MuiCardActionArea',\n  slot: 'FocusHighlight',\n  overridesResolver: (props, styles) => styles.focusHighlight\n})(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit',\n  opacity: 0,\n  backgroundColor: 'currentcolor',\n  transition: theme.transitions.create('opacity', {\n    duration: theme.transitions.duration.short\n  })\n}));\nconst CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActionArea'\n  });\n\n  const {\n    children,\n    className,\n    focusVisibleClassName\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(CardActionAreaRoot, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [children, /*#__PURE__*/_jsx(CardActionAreaFocusHighlight, {\n      className: classes.focusHighlight,\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActionArea;","import { useNavigate } from 'react-router-dom';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport AddOutlinedIcon from '@mui/icons-material/AddOutlined';\n\nimport MemoryThumbnailCard from '../MemoryThumbnailCard';\n\nexport default function CreateMemoryItem() {\n  const navigate = useNavigate();\n  const belowmd = useMediaQuery((theme) => theme.breakpoints.down('md'));\n\n  const handleClick = () => {\n    navigate('/memory/create');\n  };\n\n  return (\n    <Grid\n      item\n      key=\"creatememory\"\n      lg={3}\n      md={4}\n      xs={6}\n      sx={{ p: 1 }}\n    >\n      <MemoryThumbnailCard handleClick={handleClick}>\n        <Typography\n          variant={belowmd ? 'body1' : 'h5'}\n          color=\"button.main\"\n          sx={{\n            p: 1,\n            color: 'secondary.main',\n            bgcolor: 'primary.main',\n            borderRadius: '0px 10px 10px 0px',\n            borderColor: 'secondary.main',\n            position: 'absolute',\n            bottom: 15,\n            left: 0,\n          }}\n        >\n          Create a memory\n        </Typography>\n        <AddOutlinedIcon\n          sx={{\n            position: 'absolute',\n            border: 3,\n            borderRadius: '50%',\n            fontSize: '7.5rem',\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n            color: 'muted.main',\n          }}\n        />\n      </MemoryThumbnailCard>\n    </Grid>\n  );\n}\n","import PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\nimport MemoryThumbnailCard from '../MemoryThumbnailCard';\n\nexport default function LoadMore({ handleMoreClick }) {\n  return (\n    <Grid\n      item\n      key=\"creatememory\"\n      lg={3}\n      md={4}\n      xs={6}\n      sx={{ p: 1 }}\n    >\n      <MemoryThumbnailCard handleClick={handleMoreClick}>\n        <Typography\n          variant=\"h5\"\n          sx={{\n            p: 2,\n            color: 'secondary.main',\n            bgcolor: 'primary.main',\n            borderRadius: { md: 10, xs: '50%' },\n            borderColor: 'secondary.main',\n            position: 'absolute',\n            bottom: '50%',\n            left: '50%',\n            transform: 'translate(-50%, +50%)',\n            textAlign: 'center',\n          }}\n        >\n          Load More\n        </Typography>\n      </MemoryThumbnailCard>\n    </Grid>\n  );\n}\n\nLoadMore.propTypes = {\n  handleMoreClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport Grid from '@mui/material/Grid';\nimport MemoryThumbnail from '../MemoryThumbnail';\n\nimport CreateMemoryItem from './CreateMemoryItem';\nimport LoadMore from './LoadMore';\n\nexport default function GridView({\n  memories, handleMoreClick, nextToken, handleImageLoad,\n}) {\n  const navigate = useNavigate();\n  const sortedMemories = memories.sort((a, b) => (a.memory_id > b.memory_id ? 1 : -1));\n\n  const handleClick = (memDetails) => {\n    navigate(`/memory/${memDetails.memory_id}`, { state: memDetails });\n  };\n\n  const getThumbnailSrcSet = (thumbnailImage) => {\n    const srcSetList = thumbnailImage.images ? thumbnailImage.images.map(({ src, width }) => `${src} ${width}w`) : [];\n    return srcSetList.join(',');\n  };\n\n  return (\n    <Grid container sx={{ bgcolor: 'button.main', py: 1 }} justifyContent=\"left\" alignItems=\"flex-start\">\n      <CreateMemoryItem />\n      {sortedMemories.map((memory) => (\n        <Grid\n          item\n          key={memory.title}\n          lg={3}\n          md={4}\n          xs={6}\n          sx={{ p: 1 }}\n        >\n          <MemoryThumbnail\n            title={memory.title}\n            date={memory.date}\n            thumbnailImage={memory.photo.src}\n            thumbnailImageSrcSet={getThumbnailSrcSet(memory.photo)}\n            handleClick={() => handleClick(memory)}\n            handleImageLoad={handleImageLoad}\n          />\n        </Grid>\n      ))}\n      { nextToken && (<LoadMore handleMoreClick={handleMoreClick} />) }\n    </Grid>\n  );\n}\n\nGridView.defaultProps = {\n  memories: [],\n};\n\nGridView.propTypes = {\n  memories: PropTypes.arrayOf(\n    PropTypes.shape({\n      memory_id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      photo: PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.string,\n        src: PropTypes.string,\n        title: PropTypes.string,\n        alt: PropTypes.string,\n        width: PropTypes.number,\n        height: PropTypes.number,\n      })),\n    }),\n  ),\n  nextToken: PropTypes.string.isRequired,\n  handleMoreClick: PropTypes.func.isRequired,\n  handleImageLoad: PropTypes.func.isRequired,\n};\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Skeleton from '@mui/material/Skeleton';\nimport BasePage from '../base_page';\nimport GridView from './GridView';\nimport api from '../Api';\nimport CreateMemoryItem from './CreateMemoryItem';\nimport MemoryThumbnail from '../MemoryThumbnail';\n\nimport imageLoading from '../../static/images/image-loading.gif';\n\nasync function getMemories(\n  bucket,\n  authURL,\n  handleMemoryCallback,\n  handleTokenCallback,\n  handleThumbnailCallback,\n  nextToken = '',\n) {\n  try {\n    const resp = await api.getMemories(bucket, authURL, nextToken);\n    if (resp) {\n      if (resp.memories) {\n        handleThumbnailCallback(resp.memories);\n        const thumbnails = await Promise.all(\n          api.getThumbnails(bucket, authURL, resp.memories),\n        );\n        handleMemoryCallback(thumbnails);\n        handleTokenCallback(resp.next_continuation_token || '');\n      }\n    }\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nexport default function Memories({ bucket, authURL }) {\n  const [nextToken, setNextToken] = useState('');\n  const [memoryIDs, setMemoryIDs] = useState([]);\n  const [memories, setMemories] = useState([]);\n  const [count, setCount] = useState(0);\n  const [grid, setGrid] = useState(null);\n\n  const picLoaded = () => {\n    setCount((cnt) => cnt + 1);\n  };\n  const handleTokenChange = (newToken) => setNextToken(newToken);\n\n  const addMemories = (details) => {\n    setMemories((arr) => arr.concat(details));\n  };\n\n  const addMemoryIDs = (ids) => {\n    setMemoryIDs((arr) => arr.concat(ids));\n  };\n\n  useEffect(() => {\n    getMemories(\n      bucket,\n      authURL,\n      addMemories,\n      handleTokenChange,\n      addMemoryIDs,\n      nextToken,\n    );\n  }, []);\n\n  function GetThumbnailGrid() {\n    const thumbnailGrid = (\n      <BasePage>\n        <GridView\n          memories={memories}\n          nextToken={nextToken}\n          handleMoreClick={() => getMemories(\n            bucket,\n            authURL,\n            addMemories,\n            handleTokenChange,\n            addMemoryIDs,\n            nextToken,\n          )}\n          handleImageLoad={picLoaded}\n        />\n      </BasePage>\n    );\n    setGrid(thumbnailGrid);\n  }\n\n  useEffect(() => GetThumbnailGrid(), [memories, nextToken]);\n\n  return (memories.length === memoryIDs.length) && (count >= memoryIDs.length) ? (\n    grid\n  ) : (\n    <BasePage>\n      <Grid\n        container\n        sx={{ bgcolor: 'button.main', py: 1 }}\n        justifyContent=\"left\"\n        alignItems=\"flex-start\"\n      >\n        <CreateMemoryItem />\n\n        {memoryIDs.map((memory) => (\n          <Grid item key={memory} lg={3} md={4} xs={6} sx={{ p: 1 }}>\n            <MemoryThumbnail\n              title={<Skeleton type=\"rectangular\" sx={{ width: '60%' }} />}\n              date={<Skeleton type=\"rectangular\" sx={{ width: '50%' }} />}\n              thumbnailImage={imageLoading}\n              handleClick={() => {}}\n            />\n          </Grid>\n        ))}\n      </Grid>\n\n      <Box component=\"div\" sx={{ display: 'none' }}>\n        {grid}\n      </Box>\n    </BasePage>\n  );\n}\n\nMemories.propTypes = {\n  bucket: PropTypes.string.isRequired,\n  authURL: PropTypes.string.isRequired,\n};\n"],"sourceRoot":""}