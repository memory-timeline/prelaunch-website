{"version":3,"sources":["components/simple_snackbar.jsx","hooks/title.jsx","hooks/date.jsx","hooks/story.jsx","pages/memory/RemovePhotoIcon.jsx","pages/memory/UpdateMemoryIcon.jsx","pages/memory/DeleteMemoryIcon.jsx","components/confirmation.jsx","pages/memory/MemoryActions.jsx","pages/memory/MemoryContentStructure.jsx","pages/memory/MemoryImageSlide.jsx","pages/memory/MemoryCarousel.jsx","pages/memory/MemoryTitle.jsx","pages/memory/MemoryDate.jsx","pages/memory/MemoryStory.jsx","pages/memory/MemoryImages.jsx","pages/memory/MemoryContent.jsx","static/data/loading_album.js","pages/memory/MemoryContentLoading.jsx","pages/memory/ViewMemory.jsx"],"names":["SnackText","message","error","direction","spacing","justifyContents","alignItems","fontSize","color","SimpleSnackbar","snackBarOpen","onClose","useState","open","setOpen","snackMessage","setSnackMessage","useEffect","handleClose","action","size","onClick","autoHideDuration","anchorOrigin","vertical","horizontal","defaultProps","useTitle","initialValue","title","setTitle","e","target","value","useDate","initialDate","date","setDate","newDate","Date","formattedDate","toLocaleDateString","day","month","year","useStory","initialState","story","setStory","event","RemovePhotoIcon","handleClick","sx","bgcolor","alpha","position","top","right","UpdateMemoryIcon","Box","IconButton","DeleteMemoryIcon","Confirm","confirm","handleCallback","handleCloseCallback","Dialog","backgroundColor","DialogTitle","p","Typography","pb","Stack","Button","variant","MemoryActions","deleteItem","updateItem","snackBar","confirmMessage","handleDeleteObject","handleEditClick","setConfirm","anchorEl","setAnchorEl","Boolean","currentTarget","Menu","id","MenuListProps","borderRadius","MenuItem","bucket","authURL","memoryID","memoryDeleteCallback","a","api","deleteMemory","deleteResults","console","log","MemoryContentStructure","className","header","subheader","photoLayout","storyLayout","preview","snack","setSnack","snackError","setSnackError","theme","useTheme","useMediaQuery","breakpoints","down","handleSnackMessage","msg","status","actions","to","replace","Card","boxShadow","CardHeader","Divider","display","justifyContent","flexDirection","lg","xs","height","my","width","overflowY","mt","px","EnhancedSwipeableViews","bindKeyboard","autoPlay","virtualize","SwipeableViews","MemoryImageSlide","ind","images","handleNext","handleStepChange","activeStep","setActiveStep","loadedImages","setLoadedImages","setDisplay","length","handleImageLoad","prevLoaded","index","onChangeIndex","enableMouseEvents","animateTransitions","interval","style","slideRenderer","props","key","virtNum","count","total","modulus","mod","srcSet","map","src","join","component","onLoad","boxSizing","cursor","objectFit","alt","NextPic","edge","transform","PreviousPic","left","MemoryCarousel","handleBack","handleChange","fullScreen","padding","MemoryTitle","editable","text","handleTitleUpdate","handleTitleChange","edit","setEdit","startEdit","setStartEdit","TextField","label","onChange","defaultValue","maxWidth","MemoryDate","prevDate","handleDateUpdate","handleDateChange","LocalizationProvider","dateAdapter","AdapterDateFns","placeholder","inputFormat","maxDate","renderInput","readOnly","required","MemoryStory","prevStory","handleStoryUpdate","handleStoryChange","storyRef","useRef","whiteSpace","m","border","borderColor","minHeight","current","focus","TextareaAutosize","autoFocus","maxHeight","paddingTop","overflow","outline","resize","ref","OptionsButton","children","name","updateOp","AddPhotos","type","hidden","multiple","accept","MemoryPhotoAlbum","handlePhotoClick","renderPhoto","arrangement","setArrangement","twidth","theight","forEach","layout","photos","MemoryImages","handleThumbnailUpdate","deleteImage","addImage","setUpdateOp","thumbnail","setThumbnail","handleOpUpdate","op","OptionsRow","updatePanel","imageProps","restImageProps","deleted","find","image","handleImageDelete","FormControlLabel","control","Radio","checked","thumbnailImage","handleThumbnailChange","pr","borderLeft","bottom","BackButton","paddingX","paddingY","Link","href","underline","paddingRight","MemoryContent","memTitle","memDate","memStory","memImages","activeIndex","setActiveIndex","setImages","newImages","setNewImages","newImagesCount","setNewImagesCount","errorUploadImages","setErrorUploadImages","addImageOpen","setAddImageOpen","uploadImageProgress","setUploadImageProgress","uploadImageStatus","setUploadImageStatus","httpError","setHTTPError","maxSteps","handleHTTPError","response","operation","callback","httpErrorCallback","UpdateDetails","item","updateMemoryDetails","resp","ok","UpdateThumbnail","updateMemoryImage","filter","details","handleNewImages","entries","img","det","file","then","putURL","photo","fetch","body","method","uploadResp","pics","concat","errImgs","setTimeout","handleImageAdd","files","Array","from","Image","onload","naturalHeight","naturalWidth","resImages","resHeight","Math","ceil","creationDate","now","newName","imageDetails","URL","createObjectURL","revokeObjectURL","memoryTitle","memoryDate","updateDone","margin","prevActiveStep","step","fullWidth","textAlign","CardContent","py","imageLoading","MemoryContentLoading","Skeleton","md","loadingAlbum","getMemory","memoryId","handleMemoryCallback","handleMemoryError","viewMemory","memoryData","ViewMemory","useParams","memory","setMemory","handleMemory","mem","memError","setMemError","handleSnackBarClose","results","setInterval","clearInterval","pictures"],"mappings":"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","file":"static/js/9.40ce7078.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Stack from '@mui/material/Stack';\nimport DoneIcon from '@mui/icons-material/Done';\nimport Typography from '@mui/material/Typography';\n\nfunction SnackText({ message, error }) {\n  if (error === true) {\n    return (\n      <Stack direction=\"row\" spacing={2} justifyContents=\"space-between\" alignItems=\"center\">\n        <CloseIcon fontSize=\"small\" color=\"error\" />\n        <Typography>{message}</Typography>\n      </Stack>\n    );\n  }\n  return (\n    <Stack direction=\"row\" spacing={2} justifyContents=\"space-between\" alignItems=\"center\">\n      <DoneIcon fontSize=\"small\" color=\"success\" />\n      <Typography>{message}</Typography>\n    </Stack>\n  );\n}\n\nexport default function SimpleSnackbar({\n  snackBarOpen, message, onClose, error,\n}) {\n  const [open, setOpen] = useState(snackBarOpen);\n  const [snackMessage, setSnackMessage] = useState(message);\n\n  useEffect(() => setOpen(snackBarOpen), [snackBarOpen]);\n  useEffect(() => setSnackMessage(message), [message]);\n\n  const handleClose = () => {\n    /*    if (reason === 'clickaway') { */\n    /* return; */\n    /* } */\n\n    setOpen(false);\n    setSnackMessage(null);\n    onClose();\n  };\n\n  const action = (\n    <IconButton\n      size=\"small\"\n      aria-label=\"close\"\n      color=\"inherit\"\n      onClick={handleClose}\n    >\n      <CloseIcon fontSize=\"small\" />\n    </IconButton>\n  );\n\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={3000}\n      onClose={handleClose}\n      message={<SnackText message={snackMessage} error={error} />}\n      action={action}\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n    />\n  );\n}\n\nSimpleSnackbar.defaultProps = {\n  error: false,\n};\n\nSimpleSnackbar.propTypes = {\n  message: PropTypes.string.isRequired,\n  snackBarOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  error: PropTypes.bool,\n};\n\nSnackText.propTypes = {\n  message: PropTypes.string.isRequired,\n  error: PropTypes.bool.isRequired,\n};\n","import { useState, useEffect } from 'react';\n\nexport default function useTitle(initialValue) {\n  const [title, setTitle] = useState(initialValue);\n  useEffect(() => setTitle(initialValue), [initialValue]);\n  const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n  };\n  return [title, setTitle, handleTitleChange];\n}\n","import { useState } from 'react';\n\nexport default function useDate(initialDate) {\n  const [date, setDate] = useState(initialDate);\n  const handleDateChange = (e) => {\n    const newDate = new Date(e);\n    if (e) {\n      const formattedDate = newDate.toLocaleDateString('en-in', {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric',\n      });\n      setDate(formattedDate);\n    } else {\n      setDate(null);\n    }\n  };\n  return [date, setDate, handleDateChange];\n}\n","import { useState } from 'react';\n\nexport default function useStory(initialState) {\n  const [story, setStory] = useState(initialState);\n  const handleStoryChange = (event) => setStory(event.target.value);\n  return [story, setStory, handleStoryChange];\n}\n","import PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { alpha } from '@mui/material/styles';\n\nexport default function RemovePhotoIcon({ size, handleClick }) {\n  return (\n    <IconButton\n      size={size}\n      sx={{\n        color: 'black',\n        bgcolor: alpha('#fff', 0.4),\n        position: 'absolute',\n        top: 10,\n        right: 12,\n      }}\n      onClick={handleClick}\n    >\n      <CloseIcon size={size} />\n    </IconButton>\n  );\n}\n\nRemovePhotoIcon.defaultProps = {\n  size: 'small',\n};\n\nRemovePhotoIcon.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  size: PropTypes.string,\n};\n","import Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\n\nexport default function UpdateMemoryIcon() {\n  return (\n    <Box sx={{ alignItems: 'center' }} onClick={() => {}}>\n      <IconButton\n        aria-label=\"update\"\n        sx={{\n          bgcolor: 'form.input',\n        }}\n        onClick={() => {}}\n      >\n        <EditIcon />\n      </IconButton>\n      Edit\n    </Box>\n  );\n}\n","import Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport default function DeleteMemoryIcon() {\n  return (\n    <Box sx={{ alignItems: 'center' }}>\n      <IconButton\n        aria-label=\"delete\"\n        sx={{\n          bgcolor: 'form.input',\n        }}\n      >\n        <DeleteIcon />\n      </IconButton>\n      Delete\n    </Box>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@mui/material/Dialog';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nexport default function Confirm({\n  confirm, handleCallback, handleCloseCallback, title, message,\n}) {\n  const [open, setOpen] = useState(confirm);\n  useEffect(() => setOpen(confirm), [confirm]);\n\n  const handleClose = () => {\n    setOpen(false);\n    handleCloseCallback();\n  };\n\n  const handleSubmit = () => {\n    handleClose();\n    handleCallback();\n  };\n\n  return (\n    <Dialog open={open} sx={{ backgroundColor: 'faded.black' }}>\n      <DialogTitle>{title}</DialogTitle>\n      <Box sx={{ p: 2 }}>\n        <Typography sx={{ pb: 2 }}>{message}</Typography>\n        <Stack spacing={2} direction=\"row\">\n          <Button variant=\"contained\" onClick={handleClose}>Cancel</Button>\n          <Button variant=\"outlined\" onClick={handleSubmit}>OK</Button>\n        </Stack>\n      </Box>\n    </Dialog>\n  );\n}\n\nConfirm.propTypes = {\n  confirm: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  handleCallback: PropTypes.func.isRequired,\n  handleCloseCallback: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Confirm from '../../components/confirmation';\n\nexport default function MemoryActions({\n  deleteItem, updateItem, snackBar, confirmMessage, handleDeleteObject, handleEditClick,\n}) {\n  const [confirm, setConfirm] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => setAnchorEl(event.currentTarget);\n  const handleClose = () => setAnchorEl(null);\n\n  const handleDeleteClick = () => {\n    setConfirm(true);\n    handleClose();\n  };\n\n  const handleEdit = () => {\n    handleEditClick();\n    handleClose();\n  };\n\n  return (\n    <div>\n      <MoreVertIcon onClick={handleClick} />\n      <Menu\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n        sx={{ borderRadius: '10px' }}\n      >\n        <MenuItem onClick={handleEdit}>{updateItem}</MenuItem>\n        <MenuItem onClick={handleDeleteClick}>{deleteItem}</MenuItem>\n      </Menu>\n      <Confirm\n        title=\"Delete Memory\"\n        confirm={confirm}\n        handleCallback={handleDeleteObject}\n        handleCloseCallback={() => setConfirm(false)}\n        message={confirmMessage}\n      />\n      {snackBar}\n    </div>\n  );\n}\n\nMemoryActions.propTypes = {\n  deleteItem: PropTypes.node.isRequired,\n  updateItem: PropTypes.node.isRequired,\n  confirmMessage: PropTypes.string.isRequired,\n  snackBar: PropTypes.node.isRequired,\n  handleDeleteObject: PropTypes.func.isRequired,\n  handleEditClick: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Navigate } from 'react-router-dom';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport Box from '@mui/material/Box';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Divider from '@mui/material/Divider';\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport UpdateMemoryIcon from './UpdateMemoryIcon';\nimport DeleteMemoryIcon from './DeleteMemoryIcon';\nimport SimpleSnackbar from '../../components/simple_snackbar';\nimport MemoryActions from './MemoryActions';\nimport api from '../Api';\n\nasync function deleteMemory(bucket, authURL, memoryID, memoryDeleteCallback) {\n  try {\n    const deleteResults = await api.deleteMemory(bucket, authURL, memoryID);\n    memoryDeleteCallback(deleteResults);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nexport default function MemoryContentStructure({\n  header, subheader, photoLayout, storyLayout, bucket, memoryID, authURL, handleEditClick, preview,\n}) {\n  const [snack, setSnack] = useState(null);\n  const [snackMessage, setSnackMessage] = useState(null);\n  const [snackError, setSnackError] = useState(null);\n  let className;\n  const theme = useTheme();\n  const lgdown = useMediaQuery(theme.breakpoints.down('lg'));\n  if (lgdown) className = '';\n  else className = 'vertical-scroll';\n\n  const handleSnackMessage = (msg, error) => {\n    setSnackMessage(msg);\n    setSnackError(error);\n  };\n\n  const memoryDeleteCallback = (open) => {\n    if (open.status === 'ok') {\n      handleSnackMessage('Memory deleted successfully', false);\n    } else {\n      handleSnackMessage('Error while deleting memory', true);\n    }\n    setSnack(true);\n  };\n\n  const handleSnackBarClose = () => {\n    setSnack(false);\n    setSnackMessage(null);\n    setSnackError(null);\n  };\n\n  const snackBar = (\n    <SimpleSnackbar\n      snackBarOpen={snack}\n      message={snackMessage}\n      onClose={handleSnackBarClose}\n      error={snackError}\n    />\n  );\n\n  const actions = !preview ? (\n    <MemoryActions\n      confirmMessage=\"Do you want to delete this memory?\"\n      snackBar={snackBar}\n      handleDeleteObject={() => {\n        deleteMemory(bucket, authURL, memoryID, memoryDeleteCallback);\n      }}\n      deleteItem={<DeleteMemoryIcon />}\n      updateItem={<UpdateMemoryIcon />}\n      handleEditClick={handleEditClick}\n    />\n  ) : <MoreVertIcon />;\n\n  return (snack === false) ? (\n    <Navigate to=\"/memories\" replace />\n  ) : (\n    <Card\n      sx={{\n        boxShadow: 0,\n        bgcolor: 'button.main',\n        p: 1,\n      }}\n    >\n      <CardHeader\n        title={header}\n        subheader={subheader}\n        action={actions}\n      />\n      <Divider />\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-start',\n          flexDirection: {\n            lg: 'row',\n            xs: 'column',\n          },\n          height: {\n            lg: '72vh',\n          },\n          my: 1,\n        }}\n      >\n        <Box\n          sx={{\n            width: {\n              lg: '70%',\n              xs: '100%',\n            },\n            overflowY: 'scroll',\n            borderRadius: 5,\n          }}\n          className={className}\n        >\n          {photoLayout}\n        </Box>\n        <Box\n          sx={{\n            width: { lg: '30%', sx: '100%' },\n            overflowY: 'scroll',\n            mt: {\n              lg: 0,\n              xs: 2,\n            },\n            p: {\n              lg: 1,\n            },\n            px: 1,\n          }}\n          className={className}\n        >\n          {storyLayout}\n        </Box>\n      </Box>\n    </Card>\n  );\n}\n\nMemoryContentStructure.propTypes = {\n  header: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  subheader: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  photoLayout: PropTypes.element.isRequired,\n  storyLayout: PropTypes.element.isRequired,\n  memoryID: PropTypes.string.isRequired,\n  bucket: PropTypes.string.isRequired,\n  authURL: PropTypes.string.isRequired,\n  handleEditClick: PropTypes.func.isRequired,\n  preview: PropTypes.bool.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SwipeableViews from 'react-swipeable-views';\nimport Box from '@mui/material/Box';\nimport { autoPlay, virtualize, bindKeyboard } from 'react-swipeable-views-utils';\n\nconst EnhancedSwipeableViews = bindKeyboard(autoPlay(virtualize(SwipeableViews)));\n\nfunction mod(count, total) {\n  const modulus = count % total;\n  if (modulus < 0) {\n    return modulus + total;\n  }\n  return modulus;\n}\n\nexport default function MemoryImageSlide({\n  ind, images, handleNext, handleStepChange,\n}) {\n  const [activeStep, setActiveStep] = useState(ind);\n  const [loadedImages, setLoadedImages] = useState(0);\n  const [display, setDisplay] = useState(null);\n\n  useEffect(() => {\n    setActiveStep(ind);\n  }, [ind]);\n\n  useEffect(() => {\n    if (loadedImages < images.length) {\n      setDisplay('none');\n    } else {\n      setDisplay('flex');\n    }\n  }, [loadedImages]);\n\n  const handleImageLoad = () => setLoadedImages((prevLoaded) => prevLoaded + 1);\n\n  const slideRenderer = (props) => {\n    /* eslint-disable  react/prop-types */\n    const { index, key } = props;\n    const virtNum = mod(index, images.length);\n    const srcSetList = images[virtNum].images ? (\n      images[virtNum].images.map(({ src, width }) => `${src} ${width}w`)\n    ) : [];\n    const srcSet = srcSetList.join(',');\n    const style = {\n      display: 'block',\n      boxSizing: 'content-box',\n      cursor: 'pointer',\n      objectFit: 'contain',\n      height: '100vh',\n    };\n\n    return (\n      <Box\n        component=\"img\"\n        onLoad={handleImageLoad}\n        sx={{\n          display: { display },\n          justifyContents: 'center',\n          width: '100%',\n          bgcolor: '#1c1c1c',\n        }}\n        src={images[virtNum].src}\n        srcSet={srcSet}\n        style={style}\n        alt={images[virtNum].src}\n        key={key}\n      />\n    );\n  };\n\n  return (\n    <EnhancedSwipeableViews\n      index={activeStep}\n      onChangeIndex={handleStepChange}\n      enableMouseEvents\n      animateTransitions\n      interval={10000}\n      onClick={handleNext}\n      style={{ backgroundColor: 'muted.main' }}\n      slideRenderer={slideRenderer}\n    />\n  );\n}\n\nMemoryImageSlide.defaultProps = {\n  ind: 0,\n};\n\nMemoryImageSlide.propTypes = {\n  ind: PropTypes.number,\n  handleNext: PropTypes.func.isRequired,\n  handleStepChange: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  })).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport CardHeader from '@mui/material/CardHeader';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport IconButton from '@mui/material/IconButton';\n\nimport MemoryImageSlide from './MemoryImageSlide';\nimport RemovePhotoIcon from './RemovePhotoIcon';\n\nfunction NextPic({ handleClick }) {\n  return (\n    <IconButton\n      edge=\"start\"\n      color=\"primary\"\n      aria-label=\"close\"\n      onClick={handleClick}\n      sx={{\n        position: 'absolute', top: '50%', right: 0, transform: 'translate(0%, -50%)',\n      }}\n    >\n      <KeyboardArrowRight sx={{ color: 'button.main', fontSize: '4.5rem' }} />\n    </IconButton>\n  );\n}\n\nfunction PreviousPic({ handleClick }) {\n  return (\n    <IconButton\n      edge=\"start\"\n      color=\"primary\"\n      aria-label=\"close\"\n      onClick={handleClick}\n      sx={{\n        position: 'absolute', top: '50%', left: 0, transform: 'translate(0%, -50%)',\n      }}\n    >\n      <KeyboardArrowLeft sx={{ color: 'button.main', fontSize: '4.5rem' }} />\n    </IconButton>\n  );\n}\n\nexport default function MemoryCarousel({\n  open, title, date, images, index, handleNext, handleBack, handleClose, handleChange,\n}) {\n  return (\n    <Dialog\n      open={open}\n      fullScreen\n    >\n      <MemoryImageSlide\n        images={images}\n        ind={index}\n        handleNext={handleNext}\n        handleStepChange={handleChange}\n      />\n      <CardHeader\n        title={title}\n        subheader={date}\n        sx={{\n          position: 'absolute',\n          top: 10,\n          left: 10,\n          bgcolor: 'button.main',\n          borderRadius: 3,\n          padding: 1,\n        }}\n      />\n      <PreviousPic handleClick={handleBack} />\n      <NextPic handleClick={handleNext} />\n      <RemovePhotoIcon size=\"large\" handleClick={handleClose} />\n    </Dialog>\n  );\n}\n\nNextPic.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n\nPreviousPic.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n\nMemoryCarousel.defaultProps = {\n  index: 0,\n};\n\nMemoryCarousel.propTypes = {\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  handleNext: PropTypes.func.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  })).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport useTitle from '../../hooks/title';\n\nexport default function MemoryTitle({ editable, text, handleTitleUpdate }) {\n  const [title, setTitle, handleTitleChange] = useTitle(text);\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n\n  useEffect(() => {\n    setEdit(editable);\n    setTitle(text);\n    setStartEdit(false);\n  }, [editable]);\n\n  if (!edit && !startEdit) {\n    return <Typography variant=\"h6\">{title}</Typography>;\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'center' }} spacing={2}>\n        <Typography variant=\"h6\">{title}</Typography>\n        <EditIcon fontSize=\"medium\" onClick={() => setStartEdit(true)} />\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'flex-end', justifyContent: 'flex-start' }} spacing={2}>\n        <TextField\n          id=\"standard-basic\"\n          size=\"small\"\n          label=\"Title\"\n          onChange={handleTitleChange}\n          variant=\"standard\"\n          defaultValue={title}\n          sx={{ maxWidth: '200px' }}\n        />\n        <DoneTwoToneIcon\n          fontSize=\"medium\"\n          onClick={() => {\n            handleTitleUpdate(title);\n            setStartEdit(false);\n          }}\n        />\n        <ClearIcon fontSize=\"medium\" onClick={() => { setTitle(text); setStartEdit(false); }} />\n      </Stack>\n    );\n  }\n}\n\nMemoryTitle.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n  handleTitleUpdate: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DatePicker from '@mui/lab/DesktopDatePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\n\nimport useDate from '../../hooks/date';\n\nexport default function MemoryDate({ editable, prevDate, handleDateUpdate }) {\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n  const [date, setDate, handleDateChange] = useDate(prevDate);\n\n  useEffect(() => {\n    setEdit(editable);\n    setDate(prevDate);\n    setStartEdit(false);\n  }, [editable, prevDate]);\n\n  if (!edit && !startEdit) {\n    return <Typography>{date}</Typography>;\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'center' }} spacing={2}>\n        <Typography>{date}</Typography>\n        <EditIcon fontSize=\"medium\" onClick={() => setStartEdit(true)} />\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"row\" sx={{ alignItems: 'flex-end', justifyContent: 'flex-start', mt: 3 }} spacing={2}>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <DatePicker\n            label=\"Memory Date\"\n            value={date}\n            onChange={handleDateChange}\n            placeholder=\"dd/MM/yyyy\"\n            inputFormat=\"dd/MM/yyyy\"\n            maxDate={new Date()}\n            renderInput={(props) => (\n              <TextField\n                readOnly\n                required\n          // eslint-disable-next-line react/jsx-props-no-spreading\n                {...props}\n              />\n            )}\n          />\n        </LocalizationProvider>\n        <DoneTwoToneIcon\n          fontSize=\"medium\"\n          onClick={() => {\n            handleDateUpdate(date);\n            setStartEdit(false);\n          }}\n        />\n        <ClearIcon fontSize=\"medium\" onClick={() => { setDate(prevDate); setStartEdit(false); }} />\n      </Stack>\n    );\n  }\n}\n\nMemoryDate.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  prevDate: PropTypes.string.isRequired,\n  handleDateUpdate: PropTypes.func.isRequired,\n};\n","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Stack from '@mui/material/Stack';\nimport DoneTwoToneIcon from '@mui/icons-material/DoneTwoTone';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Divider from '@mui/material/Divider';\nimport Typography from '@mui/material/Typography';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport Box from '@mui/material/Box';\nimport useStory from '../../hooks/story';\nimport './memory.css';\n\nexport default function MemoryStory({ editable, prevStory, handleStoryUpdate }) {\n  const [edit, setEdit] = useState(editable);\n  const [startEdit, setStartEdit] = useState(false);\n  const [story, setStory, handleStoryChange] = useStory(prevStory);\n  const storyRef = useRef();\n\n  useEffect(() => {\n    setEdit(editable);\n    setStory(prevStory);\n    setStartEdit(false);\n  }, [editable, prevStory]);\n\n  if (!edit && !startEdit) {\n    return (\n      <Typography style={{ whiteSpace: 'pre-wrap' }}>{story}</Typography>\n    );\n  }\n\n  if (edit && !startEdit) {\n    return (\n      <Stack direction=\"column\" spacing={2}>\n        <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n          <Typography sx={{ color: 'muted.main' }}>Edit Story</Typography>\n          <EditIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              setStartEdit(true);\n            }}\n          />\n        </Stack>\n        <Divider sx={{ width: 1 }} />\n        <Typography style={{ whiteSpace: 'pre-wrap' }}>{story}</Typography>\n      </Stack>\n    );\n  }\n\n  if (edit && startEdit) {\n    return (\n      <Stack direction=\"column\" spacing={2}>\n        <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n          <Typography sx={{ color: 'muted.main' }}>Editing Story</Typography>\n          <DoneTwoToneIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              handleStoryUpdate(story);\n              setStartEdit(false);\n            }}\n          />\n          <ClearIcon\n            fontSize=\"medium\"\n            onClick={() => {\n              setStory(prevStory);\n              setStartEdit(false);\n            }}\n          />\n        </Stack>\n        <Divider sx={{ width: 1 }} />\n        <Box\n          sx={{\n            p: 2,\n            m: 1,\n            my: 2,\n            border: 1,\n            borderColor: 'primary.main',\n            bgcolor: 'input.background',\n            minHeight: '70vh',\n            borderRadius: 5,\n            width: '90%',\n          }}\n          onClick={() => storyRef.current.focus()}\n        >\n          <TextareaAutosize\n            autoFocus\n            aria-label=\"minimum height\"\n            placeholder=\"Tell your story...\"\n            value={story}\n            onChange={handleStoryChange}\n            style={{\n              width: '100%',\n              minHeight: '184px',\n              maxHeight: '70vh',\n              boxSizing: 'border-box',\n              paddingTop: '5px',\n              border: 0,\n              overflow: 'auto',\n              outline: 'none',\n              resize: 'vertical',\n              borderRadius: 5,\n              '&:focus': {\n                border: 0,\n              },\n            }}\n            ref={storyRef}\n          />\n\n        </Box>\n      </Stack>\n    );\n  }\n}\n\nMemoryStory.propTypes = {\n  prevStory: PropTypes.string.isRequired,\n  editable: PropTypes.bool.isRequired,\n  handleStoryUpdate: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport PhotoAlbum from 'react-photo-album';\nimport Radio from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport AddPhotoIcon from '@mui/icons-material/AddPhotoAlternate';\nimport Button from '@mui/material/Button';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport { alpha } from '@mui/material/styles';\n\nfunction OptionsButton({\n  children, onClick, name, updateOp,\n}) {\n  return (\n    <Button\n      id={name}\n      variant=\"contained\"\n      component=\"label\"\n      onClick={onClick}\n      sx={{\n        color: (updateOp === name) ? 'button.main' : 'muted.main',\n        borderRadius: 5,\n        backgroundColor: (updateOp === name) ? 'primary.main' : 'button.main',\n        padding: '6px 8px',\n        '&:hover': {\n          color: (updateOp === name) ? 'button.main' : 'muted.main',\n          backgroundColor: (updateOp === name) ? 'primary.main' : 'button.main',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n\nfunction AddPhotos({ handleChange, onClick, updateOp }) {\n  return (\n    <OptionsButton onClick={onClick} name=\"add\" updateOp={updateOp}>\n      <input type=\"file\" hidden multiple accept=\"image/*\" onChange={handleChange} />\n      <AddPhotoIcon sx={{ fontSize: '1.5rem' }} />\n      Add\n    </OptionsButton>\n  );\n}\n\nfunction MemoryPhotoAlbum({ images, handlePhotoClick, renderPhoto }) {\n  const [arrangement, setArrangement] = useState(null);\n  useEffect(() => {\n    let twidth = 0;\n    let theight = 0;\n    images.forEach(({ height, width }) => {\n      if (height > width) theight += 1;\n      else twidth += 1;\n    });\n    if (twidth > theight) setArrangement('rows');\n    else setArrangement('columns');\n  }, [images]);\n\n  return renderPhoto ? (\n    <PhotoAlbum\n      layout={arrangement}\n      photos={images}\n      onClick={handlePhotoClick}\n      spacing={2}\n      renderPhoto={renderPhoto}\n    />\n  ) : (\n    <PhotoAlbum\n      layout={arrangement}\n      photos={images}\n      onClick={handlePhotoClick}\n      spacing={2}\n    />\n  );\n}\n\nexport default function MemoryImages({\n  editable, images, handlePhotoClick, handleThumbnailUpdate, deleteImage, addImage,\n}) {\n  const [edit, setEdit] = useState(editable);\n  const [updateOp, setUpdateOp] = useState(null);\n  const [thumbnail, setThumbnail] = useState(null);\n\n  const handleOpUpdate = (op) => {\n    if (updateOp === op) {\n      setUpdateOp(null);\n    } else {\n      setUpdateOp(op);\n    }\n  };\n\n  useEffect(() => {\n    setEdit(editable);\n    setUpdateOp(null);\n  }, [editable]);\n\n  const handleThumbnailChange = (name) => {\n    setThumbnail(name);\n    const thumbnailImage = images.find((image) => image.alt === name);\n    handleThumbnailUpdate(thumbnailImage);\n  };\n\n  const handleImageDelete = (name) => {\n    const deleted = images.find((image) => image.alt === name);\n    deleteImage(deleted);\n  };\n\n  const renderPhotosWithDeleteIcon = ({\n    layout,\n    imageProps: { alt, style, ...restImageProps },\n  }) => (\n    <Button component=\"div\">\n      <img\n        alt={alt}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        style={{ ...style, width: layout.width, padding: 0 }}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        {...restImageProps}\n      />\n      <IconButton\n        size=\"medium\"\n        sx={{\n          color: 'black',\n          bgcolor: alpha('#fff', 0.4),\n          position: 'absolute',\n          top: 10,\n          right: 12,\n        }}\n        onClick={() => handleImageDelete(alt)}\n      >\n        <CloseIcon size=\"medium\" />\n      </IconButton>\n    </Button>\n  );\n\n  const renderPhotosWithRadioButton = ({\n    layout,\n    imageProps: { alt, style, ...restImageProps },\n  }) => (\n    <Button component=\"div\">\n      <img\n        alt={alt}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        style={{ ...style, width: layout.width, padding: 0 }}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        {...restImageProps}\n      />\n      <FormControlLabel\n        control={<Radio />}\n        label=\"\"\n        checked={alt === thumbnail}\n        onChange={() => handleThumbnailChange(alt)}\n        sx={{\n          pr: 1,\n          position: 'absolute',\n          bgcolor: alpha('#fff', 0.6),\n          color: 'black',\n          borderRadius: '0px 5px 5px 0px',\n          borderColor: 'secondary.main',\n          borderLeft: 0,\n          bottom: 20,\n          left: 15,\n        }}\n      />\n    </Button>\n  );\n\n  const OptionsRow = (\n    <Stack direction=\"row\" spacing={2}>\n      <AddPhotos handleChange={addImage} onClick={() => handleOpUpdate('add')} updateOp={updateOp} />\n      <OptionsButton onClick={() => handleOpUpdate('delete')} name=\"delete\" updateOp={updateOp}>\n        <DeleteIcon sx={{ fontSize: '1.5rem' }} />\n        Delete\n      </OptionsButton>\n      <OptionsButton onClick={() => handleOpUpdate('thumbnail')} name=\"thumbnail\" updateOp={updateOp}>Set Thumbnail</OptionsButton>\n    </Stack>\n  );\n\n  const updatePanel = (\n    <Stack direction=\"row\">\n      <Typography variant=\"h6\" color=\"muted.main\">\n        Images:\n        {images.length}\n      </Typography>\n    </Stack>\n  );\n\n  if (!edit) {\n    return (\n      <MemoryPhotoAlbum images={images} handlePhotoClick={handlePhotoClick} />\n    );\n  }\n\n  if (edit && updateOp === 'delete') {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum\n          images={images}\n          handlePhotoClick={handlePhotoClick}\n          renderPhoto={renderPhotosWithDeleteIcon}\n        />\n      </Stack>\n    );\n  }\n\n  if (edit && updateOp === 'thumbnail') {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum\n          images={images}\n          handlePhotoClick={handlePhotoClick}\n          renderPhoto={renderPhotosWithRadioButton}\n        />\n      </Stack>\n    );\n  }\n\n  if (edit && updateOp === 'add') {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum\n          images={images}\n          handlePhotoClick={handlePhotoClick}\n        />\n      </Stack>\n    );\n  }\n\n  if (edit && !updateOp) {\n    return (\n      <Stack direction=\"column\" spacing={2} sx={{ p: 2 }}>\n        {updatePanel}\n        {OptionsRow}\n        <MemoryPhotoAlbum images={images} handlePhotoClick={handlePhotoClick} />\n      </Stack>\n    );\n  }\n}\n\nMemoryImages.propTypes = {\n  editable: PropTypes.bool.isRequired,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n  handlePhotoClick: PropTypes.func.isRequired,\n  handleThumbnailUpdate: PropTypes.func.isRequired,\n  deleteImage: PropTypes.func.isRequired,\n  addImage: PropTypes.func.isRequired,\n};\n\nMemoryPhotoAlbum.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n  handlePhotoClick: PropTypes.func.isRequired,\n  renderPhoto: PropTypes.func,\n};\n\nMemoryPhotoAlbum.defaultProps = {\n  renderPhoto: null,\n};\n\nAddPhotos.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  updateOp: PropTypes.string.isRequired,\n};\n\nOptionsButton.defaultProps = {\n  onClick: () => {},\n};\n\nOptionsButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  updateOp: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n//  import PhotoAlbum from 'react-photo-album';\nimport { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Link from '@mui/material/Link';\nimport DoneIcon from '@mui/icons-material/Done';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Dialog from '@mui/material/Dialog';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport Divider from '@mui/material/Divider';\nimport Box from '@mui/material/Box';\nimport MemoryCarousel from './MemoryCarousel';\nimport MemoryContentStructure from './MemoryContentStructure';\nimport MemoryTitle from './MemoryTitle';\nimport MemoryDate from './MemoryDate';\nimport MemoryStory from './MemoryStory';\nimport MemoryImages from './MemoryImages';\nimport api from '../Api';\nimport SimpleSnackbar from '../../components/simple_snackbar';\nimport './memory.css';\n\nfunction BackButton({ preview }) {\n  if (preview === false) {\n    return (\n      <Stack\n        direction=\"row\"\n        justifyContent=\"flex-start\"\n        sx={{ backgroundColor: 'button.main', paddingX: 2, paddingY: 1 }}\n      >\n        <Link href=\"/\" underline=\"none\">\n          <Button\n            variant=\"contained\"\n            component=\"label\"\n            sx={{\n              color: 'primary.main',\n              backgroundColor: 'button.main',\n              padding: '6px 8px',\n              boxShadow: 0,\n              '&:hover': {\n                backgroundColor: 'button.main',\n              },\n            }}\n          >\n            <ArrowBackIcon size=\"medium\" sx={{ paddingRight: 1 }} />\n            <Typography variant=\"body1\" color=\"muted.main\">Memories</Typography>\n          </Button>\n        </Link>\n      </Stack>\n    );\n  }\n  return null;\n}\n\nexport default function MemoryContent({\n  memTitle,\n  memDate,\n  memStory,\n  memImages,\n  bucket,\n  memoryID,\n  authURL,\n  preview,\n}) {\n  const [open, setOpen] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [title, setTitle] = useState(memTitle);\n  const [date, setDate] = useState(memDate);\n  const [story, setStory] = useState(memStory);\n  const [images, setImages] = useState(memImages);\n  const [snack, setSnack] = useState(null);\n  const [snackMessage, setSnackMessage] = useState(null);\n\n  const [newImages, setNewImages] = useState([]);\n  const [newImagesCount, setNewImagesCount] = useState(null);\n  const [errorUploadImages, setErrorUploadImages] = useState([]);\n  const [addImageOpen, setAddImageOpen] = useState(false);\n  const [uploadImageProgress, setUploadImageProgress] = useState(null);\n  const [uploadImageStatus, setUploadImageStatus] = useState(null);\n  const [snackError, setSnackError] = useState(null);\n  const [httpError, setHTTPError] = useState(false);\n\n  const maxSteps = images.length;\n\n  useEffect(() => setTitle(memTitle), [memTitle]);\n  useEffect(() => setDate(memDate), [memDate]);\n  useEffect(() => setStory(memStory), [memStory]);\n  useEffect(() => setImages(memImages), [memImages]);\n\n  const handleSnackMessage = (msg, error) => {\n    setSnackMessage(msg);\n    setSnackError(error);\n  };\n\n  const handleHTTPError = (response, operation, callback) => {\n    if (response.status === 401) {\n      handleSnackMessage('You have been logged out. Please login to continue.', true);\n    } else if (response.status === 403) {\n      handleSnackMessage('You do not have permissions to do this operation.', true);\n    } else {\n      handleSnackMessage(`Unknown error occured while ${operation}`, true);\n    }\n    callback(response.status);\n  };\n\n  const handleSnackBarClose = () => {\n    setSnack(false);\n    setSnackMessage(null);\n    setSnackError(null);\n  };\n\n  const httpErrorCallback = (status) => {\n    setSnack(true);\n    setHTTPError(status);\n  };\n\n  const UpdateDetails = async (item, value) => {\n    try {\n      const resp = await api.updateMemoryDetails(\n        bucket,\n        authURL,\n        memoryID,\n        item,\n        value,\n      );\n      if (resp.ok) {\n        handleSnackMessage(`Memory ${item} updated successfully`, false);\n      } else {\n        handleHTTPError(resp, `updating ${item}`, httpErrorCallback);\n      }\n      setSnack(true);\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const UpdateThumbnail = async (image) => {\n    try {\n      const resp = await api.updateMemoryImage(\n        bucket,\n        authURL,\n        memoryID,\n        'thumbnail',\n        image,\n      );\n      if (resp.ok) {\n        handleSnackMessage('Memory thumbnail updated successfully', false);\n        setSnack(true);\n      } else {\n        handleHTTPError(resp, 'updating thumbnail', httpErrorCallback);\n      }\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const deleteImage = async (image) => {\n    try {\n      let resp;\n      if (images.length > 1) {\n        resp = await api.updateMemoryImage(\n          bucket,\n          authURL,\n          memoryID,\n          'delete',\n          image,\n        );\n        if (resp.ok) {\n          handleSnackMessage('Memory image deleted successfully', false);\n          setImages(images.filter((item) => item.title !== image.title));\n        } else {\n          handleHTTPError(resp, 'deleting image', httpErrorCallback);\n        }\n      } else {\n        handleSnackMessage('Atleast 1 image is needed for memory. Unable to delete', true);\n      }\n      setSnack(true);\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const addImage = async (details) => {\n    try {\n      const resp = await api.updateMemoryImage(\n        bucket,\n        authURL,\n        memoryID,\n        'add',\n        details,\n      );\n      return resp;\n    } catch (error) {\n      /* eslint-disable no-console */\n      console.log(error);\n      return false;\n    }\n  };\n\n  const handleNewImages = async () => {\n    /* eslint-disable  no-await-in-loop, no-restricted-syntax */\n    for (const [index, img] of newImages.entries()) {\n      const [det, file, src] = img;\n      const putURL = await addImage(det).then((response) => {\n        if (response.ok) {\n          return response.text();\n        }\n        handleHTTPError(response, 'adding image', httpErrorCallback);\n        return '';\n      });\n      const photo = {\n        key: `memories/${memoryID}/images/${det.name}`,\n        src,\n        alt: det.name,\n        title: det.name,\n        width: det.width,\n        height: det.height,\n        images: [],\n      };\n      const uploadResp = await fetch(putURL, { body: file, method: 'PUT' });\n      if (uploadResp.ok) {\n        setUploadImageProgress(`Images uploaded: ${index + 1} / ${newImagesCount} `);\n        setImages((pics) => pics.concat([photo]));\n      } else {\n        setUploadImageStatus('Error while uploading memory image');\n        setErrorUploadImages((errImgs) => errImgs.concat([det.name]));\n        handleHTTPError(uploadResp, 'deleting image', httpErrorCallback);\n      }\n    }\n  };\n\n  useEffect(async () => {\n    if (newImages.length > 0) {\n      setAddImageOpen(true);\n      setUploadImageProgress('Preparing images for upload....');\n    }\n    if (newImages.length === newImagesCount) {\n      await handleNewImages();\n      if (errorUploadImages.length > 0) {\n        setUploadImageStatus(`Error while uploading ${errorUploadImages.length} images`);\n      } else {\n        setUploadImageStatus(`${newImages.length} image(s) uploaded successfully`);\n      }\n      setErrorUploadImages([]);\n      setNewImagesCount(null);\n      setNewImages([]);\n      setTimeout(() => {\n        setAddImageOpen(false);\n        setUploadImageStatus(null);\n        setUploadImageProgress(null);\n      }, 3000);\n    }\n  }, [newImages]);\n\n  const handleImageAdd = async (event) => {\n    if (event.target.files) {\n      const files = Array.from(event.target.files);\n      setNewImagesCount(files.length);\n      if (images.length + files.length <= 15) {\n        files.forEach((file) => {\n          const image = new Image();\n          image.onload = async (e) => {\n            const height = e.target.naturalHeight;\n            const width = e.target.naturalWidth;\n            const size = file.size / (1024 * 1024);\n            const { name } = file;\n            const resImages = [500, 1000, 1500].map((resHeight) => ({\n              height: resHeight, width: Math.ceil((resHeight * width) / height),\n            }));\n            const creationDate = Date.now();\n            const newName = `${creationDate}-${name}`;\n            const imageDetails = [{\n              name: newName, size, height, width, images: resImages,\n            }, file, e.target.src];\n            setNewImages((pics) => pics.concat([imageDetails]));\n          };\n          image.src = URL.createObjectURL(file);\n        });\n        files.map((file) => URL.revokeObjectURL(file)); // avoid memory leak\n      } else {\n        handleSnackMessage(`Unable to add ${files.length} images. Maximum images allowed per memory is 15`, true);\n        setSnack(true);\n      }\n    }\n  };\n\n  const updateTitle = (value) => {\n    const resp = UpdateDetails('title', value);\n    if (resp) {\n      setTitle(value);\n    }\n  };\n\n  const updateDate = (value) => {\n    const resp = UpdateDetails('date', value);\n    if (resp) {\n      setDate(value);\n    }\n  };\n\n  const updateStory = (value) => {\n    const resp = UpdateDetails('story', value);\n    if (resp) {\n      setStory(value);\n    }\n  };\n\n  const handleClose = () => setOpen(false);\n\n  const handleActiveIndexChange = (step) => setActiveIndex(step);\n\n  const handleBack = () => {\n    setActiveIndex(\n      (prevActiveStep) => (prevActiveStep - 1 + maxSteps) % maxSteps,\n    );\n  };\n\n  const handleNext = () => {\n    setActiveIndex((prevActiveStep) => (prevActiveStep + 1) % maxSteps);\n  };\n\n  const handlePhotoClick = (photo, event, index) => {\n    setOpen(true);\n    setActiveIndex(index);\n  };\n\n  const handleEditClick = () => setEdit(true);\n\n  const memoryTitle = (\n    <MemoryTitle\n      editable={edit}\n      text={title}\n      handleTitleUpdate={updateTitle}\n    />\n  );\n\n  const memoryDate = (\n    <MemoryDate editable={edit} prevDate={date} handleDateUpdate={updateDate} />\n  );\n\n  const storyLayout = (\n    <MemoryStory\n      editable={edit}\n      prevStory={story}\n      handleStoryUpdate={updateStory}\n    />\n  );\n\n  const photoLayout = (\n    <MemoryImages\n      editable={edit}\n      images={images}\n      handlePhotoClick={handlePhotoClick}\n      handleThumbnailUpdate={UpdateThumbnail}\n      deleteImage={deleteImage}\n      addImage={handleImageAdd}\n    />\n  );\n\n  const updateDone = (\n    <Button\n      variant=\"contained\"\n      component=\"label\"\n      onClick={() => setEdit(false)}\n      sx={{\n        color: 'primary.main',\n        borderRadius: 5,\n        backgroundColor: 'button.main',\n        padding: '6px 8px',\n      }}\n    >\n      <DoneIcon size=\"medium\" sx={{ paddingRight: 1 }} />\n      <Typography variant=\"body1\" color=\"muted.main\">Edit</Typography>\n    </Button>\n  );\n\n  if (httpError === 401 && snack === false) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  return (\n    <>\n      {edit ? (\n        <Stack\n          direction=\"row\"\n          justifyContent=\"flex-start\"\n          sx={{ backgroundColor: 'button.main', paddingX: 2, paddingY: 1 }}\n        >\n          {updateDone}\n        </Stack>\n      ) : <BackButton preview={preview} /> }\n      <Box\n        component=\"div\"\n        sx={{\n          backgroundColor: 'button.main',\n          margin: edit ? '5px' : 0,\n        }}\n      >\n        <MemoryContentStructure\n          header={memoryTitle}\n          subheader={memoryDate}\n          photoLayout={photoLayout}\n          storyLayout={storyLayout}\n          memoryID={memoryID}\n          bucket={bucket}\n          authURL={authURL}\n          handleEditClick={handleEditClick}\n          preview={preview}\n        />\n      </Box>\n      <MemoryCarousel\n        open={open}\n        title={title}\n        date={date}\n        images={images}\n        index={activeIndex}\n        handleNext={handleNext}\n        handleBack={handleBack}\n        handleClose={handleClose}\n        handleChange={handleActiveIndexChange}\n      />\n      <SimpleSnackbar\n        snackBarOpen={snack}\n        message={snackMessage}\n        onClose={handleSnackBarClose}\n        error={snackError}\n      />\n      <Dialog\n        open={addImageOpen}\n        fullWidth\n        sx={{\n          p: 1,\n        }}\n      >\n        <Card sx={{ maxWidth: 1, p: 1 }}>\n          <CardHeader title=\"Adding Images\" sx={{ textAlign: 'center' }} />\n          <Divider />\n          <CardContent>\n            <Typography variant=\"h6\" sx={{ color: 'muted.main' }}>{uploadImageProgress}</Typography>\n            <Stack justifyContent=\"center\" sx={{ py: 2 }}>\n              <Typography variant=\"h5\">{uploadImageStatus}</Typography>\n            </Stack>\n          </CardContent>\n        </Card>\n      </Dialog>\n\n    </>\n  );\n}\n\nMemoryContent.defaultProps = {\n  memTitle: 'Memory Title',\n  memDate: 'Memory Date',\n  memStory: 'Memory Text',\n};\n\nMemoryContent.propTypes = {\n  memTitle: PropTypes.string,\n  memDate: PropTypes.string,\n  memStory: PropTypes.string,\n  memoryID: PropTypes.string.isRequired,\n  bucket: PropTypes.string.isRequired,\n  authURL: PropTypes.string.isRequired,\n  memImages: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ).isRequired,\n  preview: PropTypes.bool.isRequired,\n};\n\nBackButton.propTypes = {\n  preview: PropTypes.bool.isRequired,\n};\n","import imageLoading from '../images/image-loading.gif';\n\nexport default [\n  {\n    key: 1, src: imageLoading, width: 667, height: 500,\n  },\n  {\n    key: 2, src: imageLoading, width: 667, height: 500,\n  },\n  {\n    key: 3, src: imageLoading, width: 375, height: 500,\n  },\n  {\n    key: 4, src: imageLoading, width: 667, height: 500,\n  },\n  {\n    key: 5, src: imageLoading, width: 375, height: 500,\n  },\n  {\n    key: 6, src: imageLoading, width: 667, height: 500,\n  },\n  {\n    key: 7, src: imageLoading, width: 667, height: 500,\n  },\n  {\n    key: 8, src: imageLoading, width: 667, height: 500,\n  },\n  {\n    key: 9, src: imageLoading, width: 667, height: 500,\n  },\n  {\n    key: 10, src: imageLoading, width: 667, height: 500,\n  },\n  {\n    key: 11, src: imageLoading, width: 375, height: 500,\n  },\n  {\n    key: 12, src: imageLoading, width: 375, height: 500,\n  },\n  {\n    key: 13, src: imageLoading, width: 375, height: 500,\n  },\n  {\n    key: 14, src: imageLoading, width: 375, height: 500,\n  },\n  {\n    key: 15, src: imageLoading, width: 667, height: 500,\n  },\n];\n","import Skeleton from '@mui/material/Skeleton';\nimport PhotoAlbum from 'react-photo-album';\n\nimport MemoryContentStructure from './MemoryContentStructure';\nimport loadingAlbum from '../../static/data/loading_album';\n\nexport default function MemoryContentLoading() {\n  return (\n    <MemoryContentStructure\n      header={(\n        <Skeleton\n          type=\"rectangular\"\n          sx={{\n            width: {\n              lg: '20%',\n              md: '30%',\n              xs: '70%',\n            },\n          }}\n        />\n  )}\n      subheader={(\n        <Skeleton\n          type=\"rectangular\"\n          sx={{\n            width: {\n              lg: '15%',\n              md: '20%',\n              xs: '60%',\n            },\n          }}\n        />\n  )}\n      photoLayout={(\n        <PhotoAlbum\n          layout=\"rows\"\n          photos={loadingAlbum}\n          spacing={2}\n        />\n  )}\n      storyLayout={(\n        <>\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '50%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '50%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '50%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '98%' }} />\n          <Skeleton type=\"rectangular\" sx={{ width: '50%' }} />\n        </>\n    )}\n    />\n  );\n}\n","import { useParams, Navigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n//  import { EditorState, convertFromRaw } from 'draft-js';\n\nimport api from '../Api';\nimport BasePage from '../base_page';\nimport MemoryContent from './MemoryContent';\nimport MemoryContentLoading from './MemoryContentLoading';\nimport SimpleSnackbar from '../../components/simple_snackbar';\n\nasync function getMemory(\n  bucket,\n  authURL,\n  memoryId,\n  handleMemoryCallback,\n  handleMemoryError,\n) {\n  try {\n    const memoryData = await api.viewMemory(bucket, authURL, memoryId);\n    if (memoryData.status) {\n      handleMemoryError(memoryData);\n      return;\n    }\n    handleMemoryCallback(memoryData);\n  } catch (error) {\n    /* eslint-disable no-console */\n    console.log(error);\n  }\n}\n\nexport default function ViewMemory({ bucket, authURL }) {\n  const params = useParams();\n  const { memoryId } = params;\n  const [memory, setMemory] = useState();\n  const [snack, setSnack] = useState(null);\n  const [snackMessage, setSnackMessage] = useState(null);\n  const [snackError, setSnackError] = useState(null);\n\n  const handleMemory = (mem) => setMemory(mem);\n\n  const [memError, setMemError] = useState(null);\n\n  const handleSnackMessage = (msg, error) => {\n    setSnackMessage(msg);\n    setSnackError(error);\n  };\n\n  const handleSnackBarClose = () => {\n    setSnack(false);\n    setSnackMessage(null);\n    setSnackError(null);\n  };\n\n  const handleMemoryError = (results) => {\n    if (results.status === 'unauthenticated') {\n      handleSnackMessage('You have been logged out. Navigating to login page', true);\n      setSnack(true);\n      setInterval(() => setMemError('unauthenticated'), 3000);\n    }\n\n    if (results.status === 'forbidden') {\n      handleSnackMessage('You do not have access to this memory. Navigating to memories page', true);\n      setSnack(true);\n      setInterval(() => setMemError('forbidden'), 3000);\n    }\n  };\n\n  useEffect(() => {\n    getMemory(bucket, authURL, memoryId, handleMemory, handleMemoryError);\n    const interval = setInterval(\n      () => getMemory(bucket, authURL, memoryId, handleMemory, handleMemoryError),\n      300000,\n    );\n    return () => clearInterval(interval);\n  }, []);\n\n  if (memError === 'unauthenticated') {\n    return <Navigate to=\"/login\" />;\n  }\n\n  if (memError === 'forbidden') {\n    return <Navigate to=\"/memories\" />;\n  }\n\n  return memory ? (\n    <BasePage>\n      <MemoryContent\n        memTitle={memory.title}\n        memDate={memory.date}\n        memImages={memory.pictures.photos}\n        memStory={memory.story}\n        memoryID={memoryId}\n        bucket={bucket}\n        authURL={authURL}\n        preview={false}\n      />\n      <SimpleSnackbar\n        snackBarOpen={snack}\n        message={snackMessage}\n        onClose={handleSnackBarClose}\n        error={snackError}\n      />\n    </BasePage>\n  ) : (\n    <BasePage>\n      <MemoryContentLoading />\n      <SimpleSnackbar\n        snackBarOpen={snack}\n        message={snackMessage}\n        onClose={handleSnackBarClose}\n      />\n    </BasePage>\n  );\n}\n\nViewMemory.propTypes = {\n  bucket: PropTypes.string.isRequired,\n  authURL: PropTypes.string.isRequired,\n};\n"],"sourceRoot":""}